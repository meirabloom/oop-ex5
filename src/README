elitali94
meira.bloom

=============================
=      File description     =
=============================
the file processing package contains two packages and the following files:
* DirectoryProcessor.java - the main class, which runs the program. Receives the files and a file of commands,
                            parses the commands into sections and filter the and orders the files according to
                            the commands in each section. Handles errors.
* FilterFactory.java - creates a new filter class according to the specified command
* OrderFactory.java - creates a new order class according to the specified command
* Section.java - represents each section of commands
* SectionParsing.java - reads the command file and parses it into sections.
         filter:
--Filter.java - an abstract class representing a filter
    between.java - returns the files that their size is between the given numbers
    booleanFilter.java - an abstract class representing the filters that filter by size
    contains.java - returns the files thst contain the given value in the file name
    executable.java - returns the files that have executable permission
    FileFilter.java - determines if the file name equals to the given text
    FilterAll - returns all the files
    Greater.java - returns the files of size greater than a given value
    hidden.java - returns the files that are hidden/not hidden
    prefix.java - returns the files that have the given value as a prefix in their name
    SizeFilter.java - an abstract class representing filters that filter by size
    smaller.java - returns the files of size smaller than a given size
    suffix.java - returns te files that have a given value as a suffix in their name
    TextFilter.java - an abstract class representing the filters that filter by text
    writable.java - returns the files that have writing permission
          order:
--Order.java - an abstract class representing an order
    AbsOrder.java - sorts files by absolute name
    SizeOrder.java - sorts files according to size
    TypeOrder.java - sorts files according to type


=============================================
=    Design and Implementation details      =
=============================================
The The DirectoryProcessor receives a command file and the directory of the files. the DirectoryProcessor
calls on the SectionParsing object, which devides the arguments in the command file into sections, each
section containing the specific type of filter and order required. each section is now an object, and is in
charge of its warnings. after being split into sections, the FilterFactory and OrderFactory determine what
kind of filter and order to use, according to the command in the subsection.
The Filter package has an abstract Filter class . it has 3 abstract classes representing the different  kinds
of filters; size, name and permissions. it also has the classes representing each specific filter.
The Order package has an abstract Order class, that sorts the files. each class inheriting Order implements a
comparator that compares the two files according to the specifications, and the Order class uses the
comparator to sort the files as required (and reverses of needed, using the reverse function).

=============================
=    Answers to questions   =
=============================
exceptions:
sorting matched files: in order to sort the files, we created an abstracts class Order, which sorts the
files by the specified order using the sort method, and if reverse is required, sorts in the reverse order.
each order class implements a comparator that compares each two files according to the order specifications.
and the Order class uses the comparator when sorting.
